!function(e){function t(n){if(i[n])return i[n].exports;var r=i[n]={exports:{},id:n,loaded:!1};return e[n].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var i={};return t.m=e,t.c=i,t.p="",t(0)}([function(e,t){var i=AFRAME.utils.bind;if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");var n={CLICK:"click",MOUSEENTER:"mouseenter",MOUSEDOWN:"mousedown",MOUSELEAVE:"mouseleave",MOUSEUP:"mouseup"},r={HOVERING:"cursor-hovering",HOVERED:"cursor-hovered"};AFRAME.registerComponent("controller-cursor",{dependencies:["raycaster"],schema:{color:{default:"#74BEC1"},radius:{default:.001}},init:function(){var e=this.el,t=this.data;this.triggerDownEl=null,this.intersection=null,this.intersectedEl=null;var n=e.sceneEl.canvas;if(!n)return void e.sceneEl.addEventListener("render-target-loaded",i(this.init,this));e.setAttribute("raycaster",{near:.03});var r=e.getAttribute("raycaster").far,s=r===1/0?1e3:r,o=new THREE.CylinderBufferGeometry(t.radius,t.radius,s,32),a=new THREE.MeshBasicMaterial({color:t.color}),c=new THREE.Mesh(o,a);c.position.z=-1*s/2,c.rotation.x=90*(Math.PI/180),e.setObject3D("cursormesh",c),this.onIntersectionBind=i(this.onIntersection,this),this.onIntersectionClearedBind=i(this.onIntersectionCleared,this),this.onTriggerDownBind=i(this.onTriggerDown,this),this.onTriggerUpBind=i(this.onTriggerUp,this)},play:function(){var e=this.el;e.addEventListener("raycaster-intersection",this.onIntersectionBind),e.addEventListener("raycaster-intersection-cleared",this.onIntersectionClearedBind),e.addEventListener("triggerdown",this.onTriggerDownBind),e.addEventListener("triggerup",this.onTriggerUpBind)},pause:function(){var e=this.el;e.removeEventListener("raycaster-intersection",this.onIntersectionBind),e.removeEventListener("raycaster-intersection-cleared",this.onIntersectionClearedBind),e.removeEventListener("triggerdown",this.onTriggerDownBind),e.removeEventListener("triggerup",this.onTriggerUpBind)},onTriggerDown:function(e){this.twoWayEmit(n.MOUSEDOWN),this.triggerDownEl=this.intersectedEl},onTriggerUp:function(e){this.twoWayEmit(n.MOUSEUP),this.intersectedEl&&this.triggerDownEl===this.intersectedEl&&this.twoWayEmit(n.CLICK)},onIntersection:function(e){var t,i,s,o=this,a=this.el;if(t=e.detail.els[0]===a?1:0,s=e.detail.intersections[t],i=e.detail.els[t]){if(this.intersectedEl===i)return void(this.intersection=s);this.intersectedEl&&this.clearCurrentIntersection(),this.intersection=s,this.intersectedEl=i,a.addState(r.HOVERING),i.addState(r.HOVERED),o.twoWayEmit(n.MOUSEENTER)}},onIntersectionCleared:function(e){var t=this.el,i=e.detail.el;t!==i&&i===this.intersectedEl&&this.clearCurrentIntersection()},clearCurrentIntersection:function(){var e=this.el;this.intersectedEl.removeState(r.HOVERED),e.removeState(r.HOVERING),this.twoWayEmit(n.MOUSELEAVE),this.intersection=null,this.intersectedEl=null},twoWayEmit:function(e){var t=this.el,i=this.intersectedEl,n=this.intersection;t.emit(e,{intersectedEl:i,intersection:n}),i&&i.emit(e,{cursorEl:t,intersection:n})}})}]);